CREATE TABLE HEADQUARTERS(
LI_ID VARCHAR(8) PRIMARY KEY,
HQ VARCHAR(4) NOT NULL
);
DROP TABLE HEADQUARTERS;
SELECT * FROM HEADQUARTERS;

CREATE TABLE CREW(
CREW_ID VARCHAR(8),
EMP_NO INTEGER NOT NULL CONSTRAINT CHECK_EMPNO CHECK (EMP_NO BETWEEN 100000000 AND 999999999),
FIRST_NAME VARCHAR(15) NOT NULL ,
LAST_NAME VARCHAR(15) NOT NULL ,
TRACTION VARCHAR(15) NOT NULL ,
CREW_TYPE VARCHAR(6) NOT NULL,
LI_ID VARCHAR(8) NOT NULL,
PRIMARY KEY(CREW_ID),
FOREIGN KEY(LI_ID) REFERENCES HEADQUARTERS,
CONSTRAINT UNIQUE_EMP_NO UNIQUE(EMP_NO)
);
DROP TABLE CREW;
SELECT * FROM CREW;

CREATE TABLE MOBILE_NOS(
CREW_ID VARCHAR(8) NOT NULL,
MOBILE_NO CHAR(10),
PRIMARY KEY(MOBILE_NO),
FOREIGN KEY(CREW_ID) REFERENCES CREW
);
DROP TABLE MOBILE_NOS;
SELECT * FROM MOBILE_NOS;

CREATE TABLE CREW_DATA(
CREW_ID PRIMARY KEY,
GENDER VARCHAR(6) NOT NULL,
DOB DATE,
HIRE_DATE DATE NOT NULL,
ADDRESS VARCHAR(38),
FOREIGN KEY(CREW_ID) REFERENCES CREW
);
DROP TABLE CREW_DATA;
SELECT * FROM CREW_DATA;

CREATE TABLE DEPENDENTS(
CREW_ID VARCHAR(8),
D_NAME VARCHAR(15),
RELATION VARCHAR(10) NOT NULL,
DOB DATE,
PRIMARY KEY(CREW_ID,D_NAME),
FOREIGN KEY(CREW_ID) REFERENCES CREW
);
DROP TABLE DEPENDENTS;
SELECT * FROM DEPENDENTS;

CREATE TABLE STATUS(
CREW_ID VARCHAR(8) PRIMARY KEY,
AVAIL_AT VARCHAR(5),
FOREIGN KEY(CREW_ID) REFERENCES CREW
);
DROP TABLE STATUS;
SELECT * FROM STATUS;

CREATE TABLE ROUTE_DETAILS(
ROUTE_ID INTEGER NOT NULL CONSTRAINT CHECK_ROUTEID CHECK(ROUTE_ID BETWEEN 10000 AND 99999),
FROM_STATION VARCHAR(4) NOT NULL,
TO_STATION VARCHAR(4) NOT NULL,
ACTUAL_KMS NUMBER NOT NULL,
PRIMARY KEY(ROUTE_ID)
);
DROP TABLE ROUTE_DETAILS;
SELECT * FROM ROUTE_DETAILS;

CREATE TABLE TRAIN_INFO(
TRAIN_NO INTEGER NOT NULL CONSTRAINT CHECK_TRAIN_NO CHECK(TRAIN_NO BETWEEN 10000 AND 99999),
ROUTEID  INTEGER NOT NULL,
PRIMARY KEY(TRAIN_NO),
FOREIGN KEY(ROUTEID) REFERENCES ROUTE_DETAILS
);
DROP TABLE TRAIN_INFO;
SELECT * FROM TRAIN_INFO;

CREATE TABLE TRAINING(
TRAINING_ID INTEGER CONSTRAINT CHECK_TRAININGID CHECK(TRAINING_ID BETWEEN 100 AND 999),
TRAINING_NAME VARCHAR(20),
LOC VARCHAR(4) NOT NULL,
TDURATION INTEGER,
PRIMARY KEY(TRAINING_ID)
);
DROP TABLE TRAINING;
SELECT * FROM TRAINING;

CREATE TABLE INSTRUCTOR(
INSTRUCTOR_ID NUMBER CONSTRAINT CHECK_INSTR_ID CHECK(INSTRUCTOR_ID BETWEEN 1000 AND 9999),
INSTRUCTORNAME VARCHAR(15) NOT NULL,
TRAINING_ID INTEGER NOT NULL,
PRIMARY KEY(INSTRUCTOR_ID),
FOREIGN KEY(TRAINING_ID) REFERENCES TRAINING
);
DROP TABLE INSTRUCTOR;
SELECT * FROM INSTRUCTOR;

CREATE TABLE MEDICAL(
CREW_ID VARCHAR(8) PRIMARY KEY,
MSTANDARD CHAR(1),
STATUS VARCHAR(5),
DUEDATE DATE,
FOREIGN KEY(CREW_ID) REFERENCES CREW
);
DROP TABLE MEDICAL;
SELECT * FROM MEDICAL;

CREATE TABLE PREVIOUS_TRAINING(
CREW_ID VARCHAR(8),
CDATE DATE,
TRAINING_ID INTEGER NOT NULL,
PRIMARY KEY(CREW_ID,CDATE),
FOREIGN KEY(CREW_ID) REFERENCES CREW,
FOREIGN KEY(TRAINING_ID) REFERENCES TRAINING
);
DROP TABLE PREVIOUS_TRAINING;
SELECT * FROM PREVIOUS_TRAINING;

CREATE OR REPLACE TRIGGER PREV_TRAIN_EVAL BEFORE INSERT ON PREVIOUS_TRAINING
FOR EACH ROW
BEGIN
DELETE FROM TRAINEE
WHERE CREW_ID=:NEW.CREW_ID;
END;

CREATE TABLE ONDUTY(
CREW_ID VARCHAR(8),
SIGNON TIMESTAMP NOT NULL,
LOCO_NO INTEGER NOT NULL CONSTRAINT CHECK_LOCONO CHECK(LOCO_NO BETWEEN 10000 AND 99999),
TRAIN_NO INTEGER NOT NULL,
AVAIL_AT VARCHAR(4),
ISLIVE CHAR(1) DEFAULT 'Y',
PRIMARY KEY(CREW_ID,SIGNON),
FOREIGN KEY(CREW_ID) REFERENCES STATUS,
FOREIGN KEY(TRAIN_NO) REFERENCES TRAIN_INFO
);
DROP TABLE ONDUTY;
SELECT * FROM ONDUTY;

CREATE OR REPLACE TRIGGER ONDUTY_EVAL BEFORE INSERT ON ONDUTY
FOR EACH ROW
DECLARE 
S MEDICAL.STATUS%TYPE;
D PREVIOUS_TRAINING.CDATE%TYPE;
A OFFDUTY.AVAILABLE%TYPE;
CURSOR C1 IS SELECT * FROM TRAINEE;
CURSOR C2 IS SELECT * FROM OFFDUTY WHERE CREW_ID=:NEW.CREW_ID AND ISLIVE='Y';
T TRAINEE%ROWTYPE;
R OFFDUTY%ROWTYPE;
BEGIN
--CHECKS IF A EMPLOYEE IS MEDICALLY FIT
SELECT STATUS INTO S FROM MEDICAL
WHERE CREW_ID=:NEW.CREW_ID;
IF S LIKE 'UNFIT'
THEN 
RAISE_APPLICATION_ERROR(-20001,'EMPLOYEE IS UNFIT!!');
END IF;
DBMS_OUTPUT.PUT_LINE('MEDICALLY FIT');
--CHECKS IF EMPLOYEE IS UNDER ANY TRAINING
OPEN C1;
LOOP
FETCH C1 INTO T;
EXIT WHEN C1%NOTFOUND;
IF T.CREW_ID=:NEW.CREW_ID
THEN RAISE_APPLICATION_ERROR(-20002,'EMPLOYEE IS UNDER TRAINING');
END IF;
END LOOP;
CLOSE C1;
DBMS_OUTPUT.PUT_LINE('NOT UNDER ANY TRAINING');
--CHECKS IF EMPLOYEE IS HAVING REFRESHER TRAINING DUE
SELECT CDATE+INTERVAL '1' YEAR INTO D FROM PREVIOUS_TRAINING 
WHERE CREW_ID=:NEW.CREW_ID AND TRAINING_ID=572
ORDER BY CDATE DESC
FETCH FIRST 1 ROW ONLY;
IF D<SYSDATE
THEN RAISE_APPLICATION_ERROR(-20003,'REFRESHER TRAINING IS DUE!!');
END IF;
DBMS_OUTPUT.PUT_LINE('NO DUE ON REFRESHER TRAINING ');
--CHECKS IF EMPLOYEE IS AVAILABLE OTHER WAY IS HE/SHE UNDER REST
OPEN C2;
FETCH C2 INTO R;
IF C2%FOUND THEN
IF R.AVAILABLE >:NEW.SIGNON 
THEN RAISE_APPLICATION_ERROR(-20004,'EMPLOYEE IS UNDER REST');
END IF;
END IF;
UPDATE ONDUTY 
SET ISLIVE='N'
WHERE CREW_ID=:NEW.CREW_ID AND ISLIVE='Y';
UPDATE OFFDUTY 
SET ISLIVE='N'
WHERE CREW_ID=:NEW.CREW_ID AND ISLIVE='Y';
DBMS_OUTPUT.PUT_LINE('AVAIL_AT '||:NEW.AVAIL_AT);
UPDATE STATUS
SET AVAIL_AT= :NEW.AVAIL_AT
WHERE CREW_ID=:NEW.CREW_ID;
CLOSE C2;
DBMS_OUTPUT.PUT_LINE('CAN GO ON DUTY');
END;
DROP TRIGGER ONDUTY_EVAL;

SELECT * FROM ONDUTY;

CREATE TABLE OFFDUTY(
CREW_ID VARCHAR(8),
LAST_SIGNOFF TIMESTAMP NOT NULL,
AVAILABLE TIMESTAMP,
AVAIL_AT VARCHAR(4) NOT NULL,
ISLIVE CHAR(1) DEFAULT 'Y',
PRIMARY KEY(CREW_ID,LAST_SIGNOFF),
FOREIGN KEY(CREW_ID) REFERENCES STATUS
);
DROP TABLE OFFDUTY;
SELECT * FROM OFFDUTY;

CREATE OR REPLACE TRIGGER OFFDUTY_EVAL BEFORE INSERT ON OFFDUTY
FOR EACH ROW
DECLARE 
CURSOR C1 IS SELECT * FROM TRAINEE;
T TRAINEE%ROWTYPE;
HEADQ HEADQUARTERS.HQ%TYPE;
BEGIN
--CHECKS IF EMPLOYEE IS UNDER ANY TRAINING
SELECT HQ INTO HEADQ FROM CREW NATURAL JOIN HEADQUARTERS 
WHERE CREW_ID=:NEW.CREW_ID;
IF HEADQ = :NEW.AVAIL_AT THEN
IF :NEW.AVAILABLE< (:NEW.LAST_SIGNOFF+ INTERVAL '16' HOUR)
THEN RAISE_APPLICATION_ERROR(-20005,'EMPLOYEE MUST HAVE ATLEAST 16 HRS HEADQUARTER REST');
END IF;
ELSE 
IF :NEW.AVAILABLE< (:NEW.LAST_SIGNOFF+ INTERVAL '6' HOUR)
THEN RAISE_APPLICATION_ERROR(-20006,'EMPLOYEE MUST BE AVAILABLE AFTER ATLEAST 6 HOURS');
END IF;
END IF;
OPEN C1;
LOOP
FETCH C1 INTO T;
EXIT WHEN C1%NOTFOUND;
IF T.CREW_ID=:NEW.CREW_ID
THEN RAISE_APPLICATION_ERROR(-20002,'EMPLOYEE IS UNDER TRAINING');
END IF;
END LOOP;
CLOSE C1;
DBMS_OUTPUT.PUT_LINE('NOT UNDER ANY TRAINING');
UPDATE ONDUTY 
SET ISLIVE='N'
WHERE CREW_ID=:NEW.CREW_ID AND ISLIVE='Y';
UPDATE OFFDUTY 
SET ISLIVE='N'
WHERE CREW_ID=:NEW.CREW_ID AND ISLIVE='Y';
UPDATE STATUS
SET AVAIL_AT=:NEW.AVAIL_AT
WHERE CREW_ID=:NEW.CREW_ID;
END;
DROP TRIGGER OFFDUTY_EVAL;

CREATE TABLE TRAINEE(
CREW_ID VARCHAR(8) PRIMARY KEY,
AVAIL_AT VARCHAR(4),
TRAINING_ID NUMBER NOT NULL,
FOREIGN KEY(CREW_ID) REFERENCES STATUS,
FOREIGN KEY(TRAINING_ID) REFERENCES TRAINING
);
DROP TABLE TRAINEE;
SELECT * FROM TRAINEE;

CREATE OR REPLACE TRIGGER TRAINEE_EVAL BEFORE INSERT ON TRAINEE
FOR EACH ROW
BEGIN
UPDATE OFFDUTY
SET ISLIVE='N'
WHERE CREW_ID=:NEW.CREW_ID AND ISLIVE='Y';
UPDATE STATUS
SET AVAIL_AT=:NEW.AVAIL_AT
WHERE CREW_ID=:NEW.CREW_ID;
DBMS_OUTPUT.PUT_LINE('TRAINEE REGISTERED');
END;

CREATE TABLE FORTNIGHT_DETAILS(
FORTNIGHT_BEGIN DATE,
CREW_ID VARCHAR(8),
OVERTIME NUMBER,
KMS NUMBER,
NIGHT_HRS NUMBER,
HQ_REST NUMBER,
OUTSTATION_REST NUMBER,
PRIMARY KEY(FORTNIGHT_BEGIN,CREW_ID),
FOREIGN KEY(CREW_ID) REFERENCES CREW
);
DROP TABLE FORTNIGHT_DETAILS;
SELECT * FROM FORTNIGHT_DETAILS;

INSERT INTO HEADQUARTERS VALUES('KZJ3241','KZJ');
INSERT INTO HEADQUARTERS VALUES('DKJ6123','DKJ');
INSERT INTO HEADQUARTERS VALUES('SC1367','SC');
INSERT INTO HEADQUARTERS VALUES('BPQ1573','BPQ');
INSERT INTO HEADQUARTERS VALUES('BZA7341','BZA');
INSERT INTO HEADQUARTERS VALUES('BDCR9787','BDCR');
INSERT INTO HEADQUARTERS VALUES('KZJ5676','KZJ');
INSERT INTO HEADQUARTERS VALUES('DKJ6565','DKJ');
INSERT INTO HEADQUARTERS VALUES('ZN1928','ZN');
INSERT INTO HEADQUARTERS VALUES('BZA7432','BZA');
INSERT INTO HEADQUARTERS VALUES('BDCR5999','BDCR');
INSERT INTO HEADQUARTERS VALUES('DKJ6261','DKJ');

SELECT * FROM HEADQUARTERS ORDER BY HQ;

INSERT INTO CREW VALUES('KZJ1224',123454321,'ARJUN','DESAI','ELEC','LPG','KZJ3241');
INSERT INTO CREW VALUES('DKJ1234',123456789,'RAKESH','PONNALA','DISL','LPG','DKJ6123');
INSERT INTO CREW VALUES('SC2345',246813579,'SAHIL','KANTAM','ELEC','ALP','SC1367');
INSERT INTO CREW VALUES('BPQ3456',135792468,'SANHTOSH','BEEMOJU','DUAL','LPM','BPQ1573');
INSERT INTO CREW VALUES('BZA4567',357912468,'ANJALI','ADIVI','ELEC','LPG','BZA7341');
INSERT INTO CREW VALUES('BDCR5678',579132468,'PREETHAM','KONDRA','ELEC','LPG','BDCR9787');
INSERT INTO CREW VALUES('SC6789',132465798,'GOPI','GANTA','DUAL','LPP','SC1367');
INSERT INTO CREW VALUES('KZJ7891',987654321,'VEDHIKA','MUSIPATLA','DISL','LPM','KZJ5676');
INSERT INTO CREW VALUES('DKJ8912',876549321,'KIRAN','POBBATHI','ELEC','LPG','DKJ6565');
INSERT INTO CREW VALUES('KZJ9124',453267891,'RAMESH','CHALLA','DUAL','LPP','KZJ3241');
INSERT INTO CREW VALUES('ZN1357',864209351,'SHESHU','VELAGANDULA','ELEC','ALG','ZN1928');
INSERT INTO CREW VALUES('BZA7522',192837465,'RAHUL','VUPPALA','ELEC','LPP','BZA7432');
INSERT INTO CREW VALUES('BDCR5888',597321475,'NIKHIL','GANLA','DUAL','LPG','BDCR5999');

SELECT * FROM CREW ORDER BY EMP_NO;

--SELECT * FROM CREW NATURAL JOIN HEADQUARTER ORDER BY LI_ID;

INSERT INTO MOBILE_NOS VALUES('KZJ1224','8499082173');
INSERT INTO MOBILE_NOS VALUES('KZJ1224','9347840236');
INSERT INTO MOBILE_NOS VALUES('DKJ1234','9310567458');
INSERT INTO MOBILE_NOS VALUES('SC2345','8332969360');
INSERT INTO MOBILE_NOS VALUES('SC2345','9448709123');
INSERT INTO MOBILE_NOS VALUES('BPQ3456','9701847673');
INSERT INTO MOBILE_NOS VALUES('BZA4567','9493122103');
INSERT INTO MOBILE_NOS VALUES('BDCR5678','9390154503');
INSERT INTO MOBILE_NOS VALUES('BDCR5678','9274655231');
INSERT INTO MOBILE_NOS VALUES('SC6789','9400738411');
INSERT INTO MOBILE_NOS VALUES('KZJ7891','8074552593');
INSERT INTO MOBILE_NOS VALUES('DKJ8912','8106845615');
INSERT INTO MOBILE_NOS VALUES('DKJ8912','7190900213');
INSERT INTO MOBILE_NOS VALUES('KZJ9124','9848654686');
INSERT INTO MOBILE_NOS VALUES('ZN1357','7984232015');
INSERT INTO MOBILE_NOS VALUES('ZN1357','9989980106');
INSERT INTO MOBILE_NOS VALUES('BZA7522','8008276371');
INSERT INTO MOBILE_NOS VALUES('BDCR5888','9121242626');

SELECT * FROM MOBILE_NOS ORDER BY CREW_ID;

INSERT INTO CREW_DATA VALUES('KZJ1224','M',TO_DATE('10-SEP-1979','DD-MM-YYYY'),TO_DATE('12-OCT-2001','DD-MM-YYYY'),'HN0.31-1-1234,SVS HOMES,HNK');
INSERT INTO CREW_DATA VALUES('DKJ1234','M',TO_DATE('1-DEC-1975','DD-MM-YYYY'),TO_DATE('22-JAN-2000','DD-MM-YYYY'),'HN0.12-2-1747,PARIMALA COLONY,TNK');
INSERT INTO CREW_DATA VALUES('SC2345','M',TO_DATE('21-OCT-1970','DD-MM-YYYY'),TO_DATE('15-AUG-1999','DD-MM-YYYY'),'HN0.21-3-3412,JAWAHAR COLONY,IGK');
INSERT INTO CREW_DATA VALUES('BPQ3456','M',TO_DATE('30-NOV-1978','DD-MM-YYYY'),TO_DATE('01-MAR-2001','DD-MM-YYYY'),'HN0.11-5-1111,ARTS COLLEGE,BPA');
INSERT INTO CREW_DATA VALUES('BZA4567','F',TO_DATE('7-JAN-1972','DD-MM-YYYY'),TO_DATE('21-JUN-1997','DD-MM-YYYY'),'HN0.31-4-4432,ADVOCATES,SUR');
INSERT INTO CREW_DATA VALUES('BDCR5678','M',TO_DATE('12-FEB-1976','DD-MM-YYYY'),TO_DATE('02-JUL-2003','DD-MM-YYYY'),'HN0.22-2-8989,TEACHERS,LPR');
INSERT INTO CREW_DATA VALUES('SC6789','M',TO_DATE('4-JUN-1973','DD-MM-YYYY'),TO_DATE('01-SEP-1998','DD-MM-YYYY'),'HN0.15-1-4521,JUBILEE HILLS,MTU');
INSERT INTO CREW_DATA VALUES('KZJ7891','F',TO_DATE('23-JULY-1976','DD-MM-YYYY'),TO_DATE('19-JAN-1999','DD-MM-YYYY'),'HN0.17-7-1666,BANJARA HILLS,WDO');
INSERT INTO CREW_DATA VALUES('DKJ8912','M',TO_DATE('15-SEP-1980','DD-MM-YYYY'),TO_DATE('17-APR-2004','DD-MM-YYYY'),'HN0.23-8-2234,KU,KLP');
INSERT INTO CREW_DATA VALUES('KZJ9124','M',TO_DATE('6-NOV-1987','DD-MM-YYYY'),TO_DATE('30-SEP-2007','DD-MM-YYYY'),'HN0.14-9-7865,VISHWA COLONY,WGL');
INSERT INTO CREW_DATA VALUES('ZN1357','M',TO_DATE('27-MAR-1975','DD-MM-YYYY'),TO_DATE('08-OCT-1998','DD-MM-YYYY'),'HN0.24-2-1290,SAINATH COLONY,KJU');
INSERT INTO CREW_DATA VALUES('BZA7522','M',TO_DATE('18-APR-1976','DD-MM-YYYY'),TO_DATE('16-JAN-2002','DD-MM-YYYY'),'HN0.31-1-8531,INDHU COLONY,RTY');
INSERT INTO CREW_DATA VALUES('BDCR5888','M',TO_DATE('26-JAN-1978','DD-MM-YYYY'),TO_DATE('12-FEB-2001','DD-MM-YYYY'),'HN0.24-5-9752,IRCTC,VJK');

SELECT * FROM CREW_DATA;

INSERT INTO DEPENDENTS VALUES('KZJ1224','SWATHI','WIFE',TO_DATE('07-JAN-1982'));
INSERT INTO DEPENDENTS VALUES('KZJ1224','SHERYL','DAUGHTER',TO_DATE('01-MAY-2004'));
INSERT INTO DEPENDENTS VALUES('DKJ1234','KEERTHI','WIFE',TO_DATE('16-FEB-1980'));
INSERT INTO DEPENDENTS VALUES('DKJ1234','THOMAS','SON',TO_DATE('05-MAR-2003'));
INSERT INTO DEPENDENTS VALUES('SC2345','SWETHA','WIFE',TO_DATE('10-JUN-1975'));
INSERT INTO DEPENDENTS VALUES('BPQ3456','MARTHAMMA','MOTHER',TO_DATE('14-JUL-1945'));
INSERT INTO DEPENDENTS VALUES('BPQ3456','ARUNA','WIFE',TO_DATE('01-AUG-1983'));
INSERT INTO DEPENDENTS VALUES('BPQ3456','MONA','DAUGHER',TO_DATE('15-SEP-1999'));
INSERT INTO DEPENDENTS VALUES('BDCR5678','RADHA','WIFE',TO_DATE('31-OCT-1980'));
INSERT INTO DEPENDENTS VALUES('BDCR5678','SANJAY','SON',TO_DATE('17-NOV-2004'));
INSERT INTO DEPENDENTS VALUES('SC6789','ROOPA','MOTHER',TO_DATE('25-DEC-1943'));
INSERT INTO DEPENDENTS VALUES('SC6789','RADHIKA','WIFE',TO_DATE('10-JAN-1975'));
INSERT INTO DEPENDENTS VALUES('SC6789','VARSHA','DAUGHTER',TO_DATE('14-FEB-1997'));
INSERT INTO DEPENDENTS VALUES('SC6789','ROHAN','SON',TO_DATE('12-MAR-1999'));
INSERT INTO DEPENDENTS VALUES('DKJ8912','RANJANI','WIFE',TO_DATE('09-APR-1985'));
INSERT INTO DEPENDENTS VALUES('ZN1357','DEEPA','WIFE',TO_DATE('21-OCT-1984'));
INSERT INTO DEPENDENTS VALUES('ZN1357','ROHITH','SON',TO_DATE('06-MAY-2005'));
INSERT INTO DEPENDENTS VALUES('BZA7522','MANJU','WIFE',TO_DATE('20-JUN-1981'));
INSERT INTO DEPENDENTS VALUES('BZA7522','POCHAMMA','MOTHER',TO_DATE('13-JUL-1947'));
INSERT INTO DEPENDENTS VALUES('BDCR5888','JAYA','WIFE',TO_DATE('22-DEC-1979'));
INSERT INTO DEPENDENTS VALUES('BDCR5888','RAVI','SON',TO_DATE('01-OCT-2002'));
INSERT INTO DEPENDENTS VALUES('BDCR5888','LAXMI','MOTHER',TO_DATE('12-FEB-1950'));

SELECT * FROM DEPENDENTS;

INSERT INTO STATUS VALUES('KZJ1224',NULL);
INSERT INTO STATUS VALUES('DKJ1234',NULL);
INSERT INTO STATUS VALUES('SC2345',NULL);
INSERT INTO STATUS VALUES('BPQ3456',NULL);
INSERT INTO STATUS VALUES('BZA4567',NULL);
INSERT INTO STATUS VALUES('BDCR5678',NULL);
INSERT INTO STATUS VALUES('SC6789',NULL);
INSERT INTO STATUS VALUES('KZJ7891',NULL);
INSERT INTO STATUS VALUES('DKJ8912',NULL);
INSERT INTO STATUS VALUES('KZJ9124',NULL);
INSERT INTO STATUS VALUES('ZN1357',NULL);
INSERT INTO STATUS VALUES('BZA7522',NULL);
INSERT INTO STATUS VALUES('BDCR5888',NULL);

SELECT * FROM STATUS;

INSERT INTO ROUTE_DETAILS VALUES(12345,'KZJ','BDCR',150);
INSERT INTO ROUTE_DETAILS VALUES(75894,'SC','KZJ',136);
INSERT INTO ROUTE_DETAILS VALUES(69532,'DKJ','NSL',200);
INSERT INTO ROUTE_DETAILS VALUES(72088,'KZJ','ZN',100);
INSERT INTO ROUTE_DETAILS VALUES(61238,'BZA','BDCR',210);
INSERT INTO ROUTE_DETAILS VALUES(90821,'SC','BPQ',150);
INSERT INTO ROUTE_DETAILS VALUES(23415,'KRMR','KZJ',90);
INSERT INTO ROUTE_DETAILS VALUES(19532,'KZJ','BZA',180);
INSERT INTO ROUTE_DETAILS VALUES(43257,'GNP','ZN',70);
INSERT INTO ROUTE_DETAILS VALUES(58321,'KZJ','NSL',170);
INSERT INTO ROUTE_DETAILS VALUES(54321,'BDCR','KZJ',150);
INSERT INTO ROUTE_DETAILS VALUES(49857,'KZJ','SC',136);
INSERT INTO ROUTE_DETAILS VALUES(23596,'NSL','DKJ',200);
INSERT INTO ROUTE_DETAILS VALUES(83216,'BDCR','BZA',210);
INSERT INTO ROUTE_DETAILS VALUES(12809,'BPQ','SC',150);
INSERT INTO ROUTE_DETAILS VALUES(51432,'KZJ','KRMR',90);
INSERT INTO ROUTE_DETAILS VALUES(23591,'BZA','KZJ',180);
INSERT INTO ROUTE_DETAILS VALUES(75234,'ZN','GNP',70);
INSERT INTO ROUTE_DETAILS VALUES(12385,'NSL','KZJ',170);

SELECT * FROM ROUTE_DETAILS;

INSERT INTO TRAIN_INFO VALUES(12754,12345);
INSERT INTO TRAIN_INFO VALUES(17011,75894);
INSERT INTO TRAIN_INFO VALUES(17206,69532);
INSERT INTO TRAIN_INFO VALUES(12722,72088);
INSERT INTO TRAIN_INFO VALUES(67245,61238);
INSERT INTO TRAIN_INFO VALUES(12721,90821);
INSERT INTO TRAIN_INFO VALUES(12762,23415);
INSERT INTO TRAIN_INFO VALUES(12706,19532);
INSERT INTO TRAIN_INFO VALUES(17234,75894);
INSERT INTO TRAIN_INFO VALUES(17208,69532);
INSERT INTO TRAIN_INFO VALUES(19777,43257);
INSERT INTO TRAIN_INFO VALUES(18777,58321);
INSERT INTO TRAIN_INFO VALUES(16555,54321);
INSERT INTO TRAIN_INFO VALUES(12888,49857);
INSERT INTO TRAIN_INFO VALUES(43255,23596);
INSERT INTO TRAIN_INFO VALUES(17891,83216);
INSERT INTO TRAIN_INFO VALUES(77777,12809);
INSERT INTO TRAIN_INFO VALUES(10007,51432);
INSERT INTO TRAIN_INFO VALUES(19324,23591);
INSERT INTO TRAIN_INFO VALUES(90008,75234);
INSERT INTO TRAIN_INFO VALUES(64821,12385);

SELECT * FROM TRAIN_INFO;

INSERT INTO TRAINING VALUES(572,'RFSH','KZJ',15);
INSERT INTO TRAINING VALUES(193,'LI','BZA',30);
INSERT INTO TRAINING VALUES(104,'LP','BPQ',14);
INSERT INTO TRAINING VALUES(689,'ALP','SC',20);
INSERT INTO TRAINING VALUES(123,'LPR','BDCR',15);

SELECT * FROM TRAINING;

INSERT INTO INSTRUCTOR VALUES(1111,'KANAKAIAH',572);
INSERT INTO INSTRUCTOR VALUES(1222,'SWAMY',572);
INSERT INTO INSTRUCTOR VALUES(1333,'ANIL',572);
INSERT INTO INSTRUCTOR VALUES(4444,'SAMPATHY',193);
INSERT INTO INSTRUCTOR VALUES(4555,'RAMESH',193);
INSERT INTO INSTRUCTOR VALUES(6611,'SRIKAR',104);
INSERT INTO INSTRUCTOR VALUES(7711,'ROHAN',689);
INSERT INTO INSTRUCTOR VALUES(8891,'ARJITH',123);
INSERT INTO INSTRUCTOR VALUES(8761,'SRINIVAS',123);

SELECT * FROM INSTRUCTOR;

INSERT INTO MEDICAL VALUES('KZJ1224','A','FIT',TO_DATE('16/01/2024', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('DKJ1234','B','FIT',TO_DATE('01/12/2023', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('SC2345','B','FIT',TO_DATE('06/04/2024', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('BPQ3456','A','FIT',TO_DATE('11/09/2023', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('BZA4567','A','FIT',TO_DATE('07/11/2023', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('BDCR5678','A','FIT',TO_DATE('02/08/2023', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('SC6789','B','FIT',TO_DATE('03/02/2024', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('KZJ7891','B','FIT',TO_DATE('12/06/2023', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('DKJ8912','A','FIT',TO_DATE('21/08/2023', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('KZJ9124','B','FIT',TO_DATE('21/08/2023', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('ZN1357','A','FIT',TO_DATE('23/01/2024', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('BZA7522','B','FIT',TO_DATE('17/06/2023', 'DD/MM/YYYY'));
INSERT INTO MEDICAL VALUES('BDCR5888','A','FIT',TO_DATE('16/03/2024', 'DD/MM/YYYY'));

SELECT * FROM MEDICAL;

INSERT INTO PREVIOUS_TRAINING VALUES('KZJ1224',TO_DATE('10-SEP-2022','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('DKJ1234',TO_DATE('1-DEC-2022','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('SC2345',TO_DATE('21-OCT-2022','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('BPQ3456',TO_DATE('30-NOV-2022','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('BZA4567',TO_DATE('7-JAN-2023','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('BDCR5678',TO_DATE('12-FEB-2023','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('SC6789',TO_DATE('4-JUN-2022','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('KZJ7891',TO_DATE('23-MAR-2023','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('DKJ8912',TO_DATE('15-SEP-2022','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('KZJ9124',TO_DATE('6-DEC-2022','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('ZN1357',TO_DATE('27-MAR-2022','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('BZA7522',TO_DATE('18-APR-2022','DD-MM-YYYY'),572);
INSERT INTO PREVIOUS_TRAINING VALUES('BDCR5888',TO_DATE('26-JAN-2023','DD-MM-YYYY'),572);

SELECT * FROM PREVIOUS_TRAINING;

SELECT CREW_ID,CDATE,CDATE + INTERVAL '1' YEAR AS "DUE DATE" FROM PREVIOUS_TRAINING WHERE( CDATE + INTERVAL '1' YEAR) < SYSDATE ;

INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'KZJ1224',2,131.2,4,15,3);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'DKJ1234',3,150,5,10,1);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'SC2345',NULL,190,2,5,4);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'BPQ3456',1,250,6,7,2);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'BZA4567',1,100,7,8,3);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'BDCR5678',4,450,1,12,6);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'SC6789',NULL,270,4,6,2);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'KZJ7891',2,132.5,2,5,7);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'DKJ8912',2,80.7,5,13,5);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'KZJ9124',1,170,1,16,1);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'ZN1357',3,270,3,9,3);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'BZA7522',2,100,2,4,2);
INSERT INTO FORTNIGHT_DETAILS VALUES(TO_DATE('16-APR-2023', 'DD-MM-YYYY'),'BDCR5888',3,184.5,9,7,2);

SELECT * FROM FORTNIGHT_DETAILS;

DESC HEADQUARTER;
DESC CREW;
DESC MOBILE_NOS;
DESC CREW_DATA;
DESC DEPENDENTS;
DESC STATUS;
DESC ROUTE_DETAILS;
DESC TRAIN_INFO;
DESC TRAINING;
DESC INSTRUCTOR;
DESC MEDICAL;
DESC PREVIOUS_TRAINING;
DESC ONDUTY;
DESC OFFDUTY;
DESC TRAINEE;
DESC FORTNIGHT_DETAILS;
--DML

SELECT * FROM ROUTE_DETAILS JOIN TRAIN_INFO ON ROUTE_DETAILS.ROUTE_ID=TRAIN_INFO.ROUTEID ORDER BY TRAIN_NO;

SET SERVEROUTPUT ON;

INSERT INTO ONDUTY VALUES('KZJ1224',TIMESTAMP'2023-05-12 09:15:00',12345,12754,'KZJ','Y');--KZJ TO BDCR
INSERT INTO ONDUTY VALUES('BDCR5888',TIMESTAMP'2023-05-12 09:35:00',21342,16555,'BDCR','Y');--BDCR TO KZJ
INSERT INTO OFFDUTY VALUES('DKJ1234',TIMESTAMP'2023-05-12 09:50:00',TIMESTAMP'2023-05-13 02:00:00','DKJ','Y');--HQ
INSERT INTO OFFDUTY VALUES('KZJ1224',TIMESTAMP'2023-05-12 15:00:00',TIMESTAMP'2023-05-12 23:00:00','BDCR','Y');--BDCR
INSERT INTO OFFDUTY VALUES('BDCR5888',TIMESTAMP'2023-05-12 15:45:00',TIMESTAMP '2023-05-12 23:50:00','KZJ','Y');--KZJ
INSERT INTO ONDUTY VALUES('SC2345',TIMESTAMP'2023-05-12 16:00:00',23451,17011,'SC','Y');--SC TO KZJ
INSERT INTO ONDUTY VALUES('BPQ3456',TIMESTAMP'2023-05-12 17:50:00',21349,77777,'BPQ','Y');--BPQ TO SC
--THIS GIVES ERROR AS HE HAS TRAINING DUE
INSERT INTO ONDUTY VALUES('ZN1357',TIMESTAMP'2023-05-12 19:30:00',98099,90008,'ZN','Y');--ZN TO GNP
INSERT INTO TRAINEE VALUES('ZN1357','KZJ',572);
INSERT INTO TRAINEE VALUES('BZA7522','KZJ',572);
INSERT INTO ONDUTY VALUES('BZA4567',TIMESTAMP'2023-05-12 20:50:00',98199,67245,'ZN','Y');--BZA TO BDCR
INSERT INTO OFFDUTY VALUES('SC2345',TIMESTAMP'2023-05-12 21:45:00',TIMESTAMP '2023-05-13 04:15:00','KZJ','Y');--KZJ
INSERT INTO ONDUTY VALUES('KZJ1224',TIMESTAMP'2023-05-12 23:25:00',56784,16555,'BDCR','Y');--BDCR TO KZJ
INSERT INTO OFFDUTY VALUES('BPQ3456',TIMESTAMP'2023-05-13 00:13:00',TIMESTAMP '2023-05-13 08:15:00','SC','Y');--SC
INSERT INTO ONDUTY VALUES('BDCR5888',TIMESTAMP '2023-05-13 00:15:00',12123,12754,'KZJ','Y');--KZJ TO BDCR
INSERT INTO ONDUTY VALUES('DKJ1234',TIMESTAMP'2023-05-13 02:40:00',80453,17208,'DKJ','Y');--DKL TO NSL
INSERT INTO OFFDUTY VALUES('BZA4567',TIMESTAMP'2023-05-13 03:10:00',TIMESTAMP '2023-05-13 11:15:00','BDCR','Y');--BDCR
INSERT INTO ONDUTY VALUES('SC2345',TIMESTAMP '2023-05-13 05:45:00',65789,12888,'KZJ','Y');--KZJ TO SC
INSERT INTO OFFDUTY VALUES('KZJ1224',TIMESTAMP'2023-05-13 06:45:00',TIMESTAMP'2023-05-13 23:00:00','KZJ','Y');--HQ
INSERT INTO OFFDUTY VALUES('BDCR5888',TIMESTAMP '2023-05-13 07:58:00',TIMESTAMP'2023-05-14 01:10:00','BDCR','Y');--HQ
INSERT INTO ONDUTY VALUES('SC6789',TIMESTAMP'2023-05-13 07:50:00',87878,17234,'SC','Y');--SC TO KZJ
INSERT INTO ONDUTY VALUES('BPQ3456',TIMESTAMP '2023-05-13 08:30:00',90912,12721,'SC','Y');--SC TO BPQ
INSERT INTO OFFDUTY VALUES('SC2345',TIMESTAMP '2023-05-13 08:55:00',TIMESTAMP '2023-05-14 04:30:00','SC','Y');--HQ
INSERT INTO OFFDUTY VALUES('DKJ1234',TIMESTAMP'2023-05-13 09:00:00',TIMESTAMP'2023-05-13 17:00:00','NSL','Y');--NSL
INSERT INTO OFFDUTY VALUES('SC2345',TIMESTAMP '2023-05-13 09:35:00',TIMESTAMP '2023-05-14 03:45:00','SC','Y');--HQ
INSERT INTO ONDUTY VALUES('BZA4567',TIMESTAMP '2023-05-13 11:35:00',33442,17891,'BDCR','Y');--BDCR TO BZA
INSERT INTO TRAINEE VALUES('KZJ7891','SC',689);
INSERT INTO ONDUTY VALUES('DKJ8912',TIMESTAMP'2023-05-13 12:00:00',12176,17206,'DKJ','Y');--DKJ TO NSL
INSERT INTO ONDUTY VALUES('KZJ9124',TIMESTAMP'2023-05-13 13:26:00',76854,10007,'NULL','Y');--KZJ TO KRMR
INSERT INTO TRAINEE VALUES('BDCR5888','BPQ',104);
INSERT INTO ONDUTY VALUES('KZJ9124',TIMESTAMP'2023-05-13 15:00:00',54612,12722,'KZJ','Y');--KZJ TO ZN
INSERT INTO OFFDUTY VALUES('BZA4567',TIMESTAMP'2023-05-13 16:30:00',TIMESTAMP'2023-05-14 12:00:00','BZA','Y');--HQ
INSERT INTO ONDUTY VALUES('BDCR5678',TIMESTAMP'2023-05-13 17:45:00',65378,16555,'BDCR','Y');--BDCR TO KZJ
INSERT INTO PREVIOUS_TRAINING VALUES('ZN1357',TO_DATE('28-MAY-2023','DD-MM-YYYY'),572);
--1
SELECT * FROM ONDUTY WHERE TRAIN_NO IN(
SELECT TRAIN_NO FROM TRAIN_INFO WHERE ROUTEID IN(
SELECT ROUTE_ID FROM ROUTE_DETAILS WHERE FROM_STATION='KZJ'
));
--2
DECLARE
C OFFDUTY.CREW_ID%TYPE;
BEGIN
SELECT CREW_ID INTO C FROM OFFDUTY
WHERE ISLIVE='Y' AND AVAIL_AT='SC' AND AVAILABLE>'14-05-2023 02:00:00'
ORDER BY AVAILABLE 
FETCH FIRST 1 ROW ONLY;
INSERT INTO ONDUTY VALUES(C,TIMESTAMP'2023-05-14 09:00:00',21342,12721,'SC','Y');
EXCEPTION 
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO CREW AVAILABLE!!');
END;
SELECT * FROM ONDUTY;
--3
DECLARE
E CREW.CREW_ID%TYPE;
T TIMESTAMP;
A TIMESTAMP;
BEGIN
E:=&E;
T:=&T;
SELECT AVAILABLE INTO A FROM OFFDUTY
WHERE CREW_ID=E AND AVAILABLE<T AND ISLIVE='Y';
DBMS_OUTPUT.PUT_LINE('AVAILABLE AT '||A);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE(E|| ' IS NOT AVAILABLE BEFORE '||T);
END;

SELECT * FROM OFFDUTY;

--4
DECLARE
FLAG INTEGER DEFAULT 1;
E CREW.CREW_ID%TYPE:=&E;
CURSOR C1 IS SELECT * FROM ONDUTY WHERE CREW_ID=E AND ISLIVE='Y';
CURSOR C2 IS SELECT * FROM OFFDUTY WHERE CREW_ID=E AND ISLIVE='Y';
CURSOR C3 IS SELECT * FROM TRAINEE WHERE CREW_ID=E;
R1 ONDUTY%ROWTYPE;
R2 OFFDUTY%ROWTYPE;
R3 TRAINEE%ROWTYPE;
BEGIN
OPEN C1;
OPEN C2;
OPEN C3;
FETCH C1 INTO R1;
IF C1%NOTFOUND
THEN
FETCH C2 INTO R2;
IF C2%NOTFOUND
THEN
FETCH C3 INTO R3;
IF C3%NOTFOUND
THEN
DBMS_OUTPUT.PUT_LINE('EMPLOYEE NOT FOUND!');
ELSE
DBMS_OUTPUT.PUT_LINE('EMPLOYEE IS UNDER TRAINING');
END IF;
ELSE
DBMS_OUTPUT.PUT_LINE('EMPLOYEE IS OFFDUTY ,WILL BE AVAILABLE AFTER '||R2.AVAILABLE);
END IF;
ELSE 
DBMS_OUTPUT.PUT_LINE('EMPLOYEE IS ON DUTY WORKING ON '||R1.TRAIN_NO||' SIGN ON AT '||R1.SIGNON);
END IF;
CLOSE C1;
CLOSE C2;
CLOSE C3;
END;

--5
SELECT * FROM  CREW NATURAL JOIN HEADQUARTERS NATURAL JOIN CREW_DATA NATURAL JOIN STATUS NATURAL JOIN MEDICAL
WHERE STATUS = 'FIT';

